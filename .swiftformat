

--swiftversion 5.3



## Excluded folders

--exclude       \
    Carthage,   \
    **/.build,  \
    Pods


# ------------ Always 


--semicolons never
--modifierorder public,override,final,static,lazy,weak,convenience
--voidtype tuple


--enable redundantExtensionACL, redundantObjc, redundantFileprivate, redundantNilInit, redundantRawValues, redundantGet, redundantLet, redundantPattern, redundantVoidReturnType, todos, typeSugar, blankLinesAtStartOfScope
 
--elseposition same-line
--guardelse same-line
 
--enable leadingDelimiters #test



# - Spaces 

--ranges no-space
--ifdef indent
--beforemarks 

--enable spaceAroundComments, spaceInsideGenerics, spaceAroundGenerics, spaceAroundBrackets, spaceInsideComments, spaceAroundParens, spaceInsideBraces, spaceInsideParens, duplicateImports



# ------------ Optional 


--enable blankLinesBetweenScopes
--enable consecutiveBlankLines
--redundanttype inferred
--trimwhitespace nonblank-lines
--patternlet inline  # or hoist
--importgrouping alphabetized

# - need testing


--enable consecutiveSpaces
--enable redundantBreak 
--enable redundantParens 
--enable redundantReturn
--enable redundantInit
--enable isEmpty



# - indent - disabled, done by Xcode formatting

# --indentcase true - cases inside a switch: "true" or "false" (default)
# --xcodeindentation enabled - Match Xcode indenting: "enabled" or "disabled" (default)
# --indent 	Number of spaces to indent, or "tab" to use tabs
# --tabwidth 	The width of a tab character. Defaults to "unspecified"
# --smarttabs 	Align code independently of tab width. defaults to "enabled"
# --ifdef 	#if indenting: "indent" (default), "no-indent" or "outdent"



# - markTypes

--enable markTypes # activates markextensions, marktypes

--markextensions always
--extensionmark "MARK: - %t  #or  %t + %c"
--marktypes never

# --operatorfunc spaced ?



--enable trailingclosures 
# TODO 
# --trailingclosures 	Comma-delimited list of functions that use trailing closures
# --nevertrailing 	List of functions that should never use trailing closures 



# - numberFormatting - disabled, todo




# ------------ Use with caution 
 

--commas always

--stripunusedargs closure-only # or always 

# --conflictmarkers reject ?

--closingparen same-line 




# - wrap

--wrapcollections before-first
--wrapparameters after-first 
--wrapconditions after-first  # preserve
--wraparguments after-first  # preserve


# - wrapAttributes

--enable wrapAttributes  # activates funcattributes, typeattributes, varattributes
--typeattributes prev-line
--varattributes same-line
--funcattributes same-line


--self init-only  #remove 


# --selfrequired  
# Comma-delimited list of functions with @autoclosure arguments
# In the rare case of functions with @autoclosure arguments, self may be required at the call site, but SwiftFormat is unable to detect this automatically. You can use the --selfrequired command-line option to specify a list of such methods, and the redundantSelf rule will then ignore them.


# 0..<3 vs 0 ..< 3
--nospaceoperators ...,..<

--nowrapoperators =



 
--extensionacl on-extension  #my style



--disable anyObjectProtocol,braces,emptyBraces,enumNamespaces,fileHeader,hoistPatternLet,indent,initCoderUnavailable,linebreakAtEndOfFile,linebreaks,numberFormatting,preferKeyPath,redundantBackticks,redundantLetError,sortedImports,strongOutlets,strongifiedSelf,trailingCommas,wrap,wrapMultilineStatementBraces,yodaConditions









